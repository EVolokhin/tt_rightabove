{"version":3,"sources":["Components/getData.ts","Components/styles.ts","Components/BookCard.tsx","Components/BooksList.tsx","Components/CharactersList.tsx","Components/Details.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["getData","url","a","fetch","response","json","getCharacters","links","requests","map","link","Promise","all","characters","bookListStyles","makeStyles","container","display","flexWrap","padding","justifyContent","alignItems","background","bookCardStyles","root","minWidth","height","margin","title","fontSize","pos","marginBottom","info","textDecoration","color","detailsStyles","flexDirection","titles","textTransform","fontWeight","navigation","person","width","backgroundColor","border","BookCard","data","classes","Card","className","CardContent","Typography","gutterBottom","authors","variant","component","name","CardActions","Button","size","to","isbn","BookList","books","length","CircularProgress","book","CharactersList","index","born","Details","withRouter","match","selectedBook","find","params","bookId","useState","setCharacters","useEffect","povCharacters","charactersList","alert","ReleaseDate","Date","released","publisher","mediaType","numberOfPages","toLocaleDateString","App","bookList","setBookList","list","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5ad5474d.chunk.js","sourcesContent":["export const BOOKS: string = 'https://www.anapioficeandfire.com/api/books';\n\nexport const getData = async(url: string) => {\n  const response = await fetch(url);\n  return response.json();\n};\n\nexport const getCharacters = async (links: string[]) => {\n  const requests = links.map((link) => getData(link));\n  const characters: any[] = await Promise.all(requests);\n  return characters;\n}","import { makeStyles } from '@material-ui/core/styles';\n\nexport const bookListStyles = makeStyles({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    padding: 20,\n    justifyContent: 'center',\n    alignItems: 'center',\n    background: '#faebd7',\n  },\n});\n\nexport const bookCardStyles = makeStyles({\n  root: {\n    minWidth: 375,\n    height: 200,\n    margin: 10,\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  info: {\n    textDecoration: 'none',\n    color: 'black'\n  }, \n});\n\nexport const detailsStyles = makeStyles({\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    padding: 20,\n    alignItems: 'center',\n    background: '#faebd7',\n  },\n  root: {\n    minWidth: 300,\n    margin: 10,\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  titles: {\n    textTransform: 'uppercase',\n    fontWeight: 'bold',\n  },\n  navigation: {\n    display: 'flex',\n    padding: 20,\n    justifyContent: 'center',\n    background: '#faebd7',\n  },\n  link: {\n    'margin-right': '20px',\n  },\n  characters: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n  },\n  person: {\n    width: 250,\n    margin: 5,\n    backgroundColor: 'white',\n    padding: 10,\n    border: '1px solid grey',\n    'border-radius': '5px',\n  },\n});\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { bookCardStyles } from './styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\n\nexport default function BookCard({ data }: any) {\n  const classes = bookCardStyles();\n\n  return (\n    <Card className={classes.root}>\n      <CardContent>\n        <Typography\n          className={classes.title}\n          color=\"textSecondary\"\n          gutterBottom\n        >\n          {data.authors}\n        </Typography>\n        <Typography variant=\"h5\" component=\"h2\">\n          {data.name}\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <Button size=\"small\">\n          <Link className={classes.info} to={`/info/${data.isbn}`}>Learn More</Link>\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n","import CircularProgress from '@material-ui/core/CircularProgress';\nimport React from 'react';\nimport BookCard from './BookCard';\nimport { bookListStyles } from './styles';\n\nexport const BookList = ({books}: any)=> {\n  const classes = bookListStyles();\n  \n  return (\n    <div className={classes.container}>\n      {(books.length !== 0) || <CircularProgress/>}\n      {books.map((book: any) => <BookCard data={book} key={book.isbn} />)}\n    </div>\n  );\n};\n","import { detailsStyles } from './styles';\n\nexport const CharactersList = ({characters}: any) => {\n  const classes = detailsStyles();\n\n  return (\n    <div className={classes.characters}>\n      {characters.map((person: any, index: number) => {\n        return (\n          <div className={classes.person} key={person.name+index}>\n            <p>{`Name: ${person.name}`}</p>\n            <p>{`Born: ${person.born}`}</p>\n          </div>\n        );\n      })}\n    </div>\n  )\n};","import React, { useEffect, useState } from 'react';\nimport { Link } from \"react-router-dom\";\nimport Card from '@material-ui/core/Card';\nimport { detailsStyles } from './styles';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { withRouter } from 'react-router-dom';\nimport { getCharacters } from './getData'\nimport { CharactersList } from './CharactersList';\n\nexport const Details = withRouter(\n  ({ match, books }: any) => {\n    let list: any[] = [];\n    const classes = detailsStyles();\n    const selectedBook = books.find((book: any) => book.isbn === match.params.bookId)\n    const [book] = useState(selectedBook);\n    const [characters, setCharacters] = useState(list);\n\n    useEffect(()=> {\n      (async function () {\n        try {\n          const charactersList: any[] = await getCharacters(book.povCharacters);\n\n          setCharacters(charactersList);\n        } catch (error) {\n          alert('Characters Load Error');\n        }\n\n      })();\n    }, [book.povCharacters])\n\n    const ReleaseDate = new Date(book.released);\n\n    return (\n      <div className={classes.container}>\n        <div className={classes.navigation}>\n          <Link className={classes.link} to=\"/\" >BOOKS LIST</Link>\n        </div>\n        <Card className={classes.root}>\n          <CardContent>\n            <Typography\n              className={classes.title}\n              color=\"textSecondary\"\n              gutterBottom\n            >\n              {book.authors}\n            </Typography>\n            <Typography variant=\"h5\" component=\"h2\">\n              {book.name}\n            </Typography>\n            <Typography className={classes.pos} color=\"textSecondary\">\n              {`Publisher: ${book.publisher}`}\n            </Typography>\n            <Typography variant=\"body2\" component=\"p\">\n              {`Cover: ${book.mediaType}`}\n            </Typography>\n            <Typography variant=\"body2\" component=\"p\">\n              {`Number of pages: ${book.numberOfPages}`}\n            </Typography>\n            <Typography variant=\"body2\" component=\"p\">\n              {`Released: ${ReleaseDate.toLocaleDateString()}`}\n            </Typography>\n          </CardContent>\n        </Card>\n        <div className={classes.container}>\n          <p className={classes.titles}>\n             characters:\n          </p>\n          {(characters.length !== 0) || <CircularProgress/>}\n          <CharactersList characters={characters}/>\n        </div>\n      </div>\n    );\n})","import React, { useState, useEffect } from 'react';\nimport {\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport { BOOKS, getData } from './Components/getData';\nimport { BookList } from './Components/BooksList'\nimport { Details } from './Components/Details';\nimport './App.css';\n\nfunction App() {\n  let arrayBooks: object[] = [];\n  const [bookList, setBookList] = useState(arrayBooks);\n\n  useEffect(() => {\n    (async function () {\n      try {\n        const list: object[] = await getData(BOOKS);\n        setBookList(list);\n      } catch (error) {\n        alert('Books Load Error');\n      }\n    })();\n  }, []);\n\n  return (\n    <>\n      <div>\n        <Switch>\n          <Route path=\"/info/:bookId\">\n            <Details books={bookList} />\n          </Route>\n          <Route path=\"/\">\n            <BookList books={bookList} />\n          </Route>\n        </Switch>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n  BrowserRouter as Router,\n} from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Router>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}